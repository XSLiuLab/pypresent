download.file("ftp://ftp.ensembl.org/pub/release-75/fasta/homo_sapiens/pep/Homo_sapiens.GRCh37.75.pep.all.fa.gz",
destfile = "Homo_sapiens.GRCh37.75.pep.all.fa.gz")
download.file("ftp://ftp.ensembl.org/pub/release-75/fasta/homo_sapiens/pep/Homo_sapiens.GRCh37.75.pep.all.fa.gz",
destfile = "proteomes/Homo_sapiens.GRCh37.75.pep.all.fa.gz")
download.file("ftp://ftp.ensembl.org/pub/release-75/fasta/homo_sapiens/pep/Homo_sapiens.GRCh37.75.pep.all.fa.gz",
destfile = "proteomes/Homo_sapiens.GRCh37.75.pep.all.fa.gz")
?unzip()
?unzip("proteomes/Homo_sapiens.GRCh37.75.pep.all.fa.gz")
unzip("proteomes/Homo_sapiens.GRCh37.75.pep.all.fa.gz")
download.file("ftp://ftp.ensembl.org/pub/release-75/fasta/homo_sapiens/pep/Homo_sapiens.GRCh37.75.pep.all.fa.gz",
destfile = "proteomes/Homo_sapiens.GRCh37.75.pep.all.fa.gz")
system("gunzip proteomes/Homo_sapiens.GRCh37.75.pep.all.fa.gz")
HS.proteome.refseq <- getProteome( db       = "ensembl",
organism = "Homo sapiens",
path     = "proteomes",
gunzip = TRUE)
library(biomartr)
HS.proteome.refseq <- getProteome( db       = "ensembl",
organism = "Homo sapiens",
path     = "proteomes",
gunzip = TRUE)
?getProteome
HS.proteome.refseq <- getProteome( db       = "refseq",
organism = "Homo sapiens",
path     = "proteomes",
gunzip = TRUE)
getSequence()
?getSequence()
protein
View(protein)
nchar(protein$peptide)
getBM(c("hgnc_symbol", "chromosome_name",
"start_position", "end_position"),
"hgnc_symbol", "TP53", ensembl)
protein = getSequence(id=c("CDC20"),
type="hgnc_symbol",
seqType="peptide",
mart=ensembl,
verbose = T)
protein
iinstall.packages("reticulate")
install.packages("reticulate")
library(reticulate)
py_config()
use_condaenv(condaenv = "pypresent", required = TRUE)
library(reticulate)
use_condaenv(condaenv = "pypresent", required = TRUE)
py_config()
use_condaenv(condaenv = "pypresent", required = TRUE)
# py_config()
bt = import_builtins()
sys = import("sys")
sys$path$append('/Users/wsx/Documents/GitHub/pypresent/')
sys$path.append
py_get_attr(sys$path)
py_get_attr(sys$path, name = "append")
py_list_attributes(sys)
py_list_attributes(sys$path)
sys.path = import("sys.path")
sys$path
sys$path = c(sys$path, '/Users/wsx/Documents/GitHub/pypresent/')
sys$path
?import
import("mutation")
`%from%`
allele = import("allele")
patient = import("patient")
config = import("config")
Mutation = mutation$Mutation
mutation = import("mutation")
Mutation = mutation$Mutation
Allele = allele$Allele
Patient = patient$Patient
check = config$check
check
# Check
mut = Mutation(20, 'K', from_file=TRUE,
gene_fasta_file='../data/protein.fa', id='OR5AC1_X20K')
args(Mutation)
# Check
mut = Mutation(20, 'K', from_file = TRUE,
gene_fasta_file = "../data/protein.fa", id = 'OR5AC1_X20K')
# Check
mut = Mutation(20L, 'K', from_file = TRUE,
gene_fasta_file = "../data/protein.fa", id = 'OR5AC1_X20K')
mut
print(mut)
aI = Allele('HLA-A01:01', mhc_class='I')
check(aI)
aI = Allele('HLA-A01:01', mhc_class='I')
aI$allele_score(mut)
aI$allele_score(mut)
# Check
mut = Mutation(20L, 'H', from_file = TRUE,
gene_fasta_file = "../data/protein.fa",
id = 'OR5AC1_X20K', native_aa = "H")
mut
aI = Allele('HLA-A01:01', mhc_class='I')
aI$allele_score(mut)
aI$allele_score(mut, verbose = TRUE)
library(biomaRt)
listEnsemblArchives()
listMarts(host = 'http://grch37.ensembl.org')
ensembl = useMart('http://grch37.ensembl.org',
biomart = "ENSEMBL_MART_ENSEMBL",
dataset = "hsapiens_gene_ensembl")
?getSequence
library(tidyverse)
library(tidyverse)
van2015 = read_csv("van2015_sample.csv")
van2015.mut = read_csv("van2015_mutation.csv")
snyder2017 = read_csv("snyder2017_sample.csv")
snyder2017.mut = read_csv("snyder2017_mutation.csv")
ph = bind_rows(van2015, snyder2017)
van2015.mut
snyder2017.mut
mut = bind_rows(van2015.mut, snyder2017.mut)
mut = bind_rows(van2015.mut, snyder2017.mut %>%
mutate(patient = as.character(patient)))
table(van2015.mut$Chromosome)
mut = bind_rows(van2015.mut, snyder2017.mut %>%
mutate(patient = as.character(patient),
Chromosome = as.character(Chromosome)))
mut
protein = getSequence(id=c("ABCG1"),
type="hgnc_symbol",
seqType="peptide",
mart=ensembl,
verbose = T)
nchar(protein$peptide)
mut
getSequence(id=c("ABCG1"),
start = 43702476,
end = 43702476,
type="hgnc_symbol",
seqType="peptide",
mart=ensembl,
verbose = T)
mut
getSequence(chromosome = 21,
start = 43702476,
end = 43702476,
seqType="peptide",
mart=ensembl,
verbose = T)
getSequence(id=c("ABCG1"),
chromosome = 21,
start = 43702476,
end = 43702476,
type="hgnc_symbol",
seqType="peptide",
mart=ensembl,
verbose = T)
getSequence(chromosome = 21,
start = 43702476,
end = 43702476,
type="hgnc_symbol",
seqType="peptide",
mart=ensembl,
verbose = T)
getSequence(chromosome = 21,
start = 43702476,
end = 43702476,
type="hgnc_symbol",
seqType="peptide",
mart=ensembl)
?getBM
getSequence(chromosome = 21,
start = 43702476,
end = 43702478,
type="hgnc_symbol",
seqType="peptide",
mart=ensembl)
listAttributes(ensembl)
listAttributes(ensembl) -> t
View(t)
getBM(c("hgnc_symbol", "chromosome_name", "strand",
"start_position", "end_position",
"transcript_start", "transcript_end",
"transcription_start_site", "peptide"),
"hgnc_symbol", "TP53", ensembl) -> zz
View(zz)
nchar(zz$peptide)
protein = getSequence(id=c("TP53"),
type="hgnc_symbol",
seqType="peptide",
mart=ensembl,
verbose = T)
nchar(zz$peptide)
nchar(protein$peptide)
getBM(c("hgnc_symbol", "chromosome_name", "strand",
"start_position", "end_position",
"transcript_start", "transcript_end",
"transcription_start_site", "peptide", "coding", "gene_biotype"),
"hgnc_symbol", "TP53", ensembl) -> zz
getBM(c("hgnc_symbol", "chromosome_name", "strand",
"start_position", "end_position",
"transcript_start", "transcript_end",
"transcription_start_site", "peptide", "coding", "gene_biotype"),
"hgnc_symbol", "TP53", ensembl) -> zz
getBM(c("hgnc_symbol", "chromosome_name", "strand",
"start_position", "end_position",
"transcript_start", "transcript_end",
"transcription_start_site", "peptide", "coding", "gene_biotype"),
"hgnc_symbol", "TP53", ensembl) -> zz
listFilters(ensembl)
getBM(c("hgnc_symbol", "chromosome_name", "strand",
"start_position", "end_position",
"transcript_start", "transcript_end",
"transcription_start_site", "peptide", "coding", "gene_biotype"),
"hgnc_symbol", "TP53", ensembl, checkFilters = F) -> zz
getBM(c("hgnc_symbol", "chromosome_name", "strand",
"start_position", "end_position",
"transcript_start", "transcript_end",
"transcription_start_site", "peptide", "coding"),
"hgnc_symbol", "TP53", ensembl) -> zz
getBM(c("hgnc_symbol", "chromosome_name", "strand",
"start_position", "end_position",
"transcript_start", "transcript_end",
"transcription_start_site", "peptide"),
"hgnc_symbol", "TP53", ensembl) -> zz
getBM(c("hgnc_symbol", "chromosome_name", "strand",
"start_position", "end_position",
"transcript_start", "transcript_end",
"transcription_start_site", "coding"),
"hgnc_symbol", "TP53", ensembl) -> zz
View(zz)
getBM(c("hgnc_symbol", "chromosome_name", "strand",
"start_position", "end_position",
"transcript_start", "transcript_end",
"transcription_start_site", "peptide", "gene_biotype"),
"hgnc_symbol", "TP53", ensembl) -> zz
View(zz)
View(zz)
getBM(c("hgnc_symbol", "chromosome_name", "strand",
"start_position", "end_position",
"transcript_start", "transcript_end",
"transcription_start_site", "peptide", "coding"),
"hgnc_symbol", "TP53", ensembl) -> zz
getBM(c("hgnc_symbol", "chromosome_name", "strand",
"start_position", "end_position",
"transcript_start", "transcript_end",
"transcription_start_site", "peptide", "coding"),
"hgnc_symbol", "TP53", ensembl, quote = TRUE) -> zz
getBM(c("hgnc_symbol", "chromosome_name", "strand",
"start_position", "end_position",
"transcript_start", "transcript_end",
"transcription_start_site", "peptide", "coding"),
"hgnc_symbol", "TP53", ensembl, quote = FALSE) -> zz
View(listFilters(ensembl))
getBM(c("hgnc_symbol", "chromosome_name", "strand",
"start_position", "end_position",
"transcript_start", "transcript_end",
"transcription_start_site", "peptide"),
c("hgnc_symbol", "with_pdb"), "TP53", ensembl) -> zz
getBM(c("hgnc_symbol", "chromosome_name", "strand",
"start_position", "end_position",
"transcript_start", "transcript_end",
"transcription_start_site", "peptide"),
"with_pdb", "TP53", ensembl) -> zz
View(zz)
zz$transcription_start_site - zz$transcript_start
zz$transcription_start_site - zz$transcript_end
van2015 = read_excel("data/Science2015_Clinical.xlsx")
library(readxl)
library(tidyverse)
van2015 = read_excel("data/Science2015_Clinical.xlsx")
van2015 = van2015 %>%
mutate(HLA = paste(
hla.a1, hla.a2,
hla.b1, hla.b2,
hla.c1, hla.c2,
sep = ";"
)) %>%
select(patient, HLA)
van2015.mut = read_excel("data/Science2015_TMB_List_AllPatients.xlsx")
View(van2015.mut)
van2015.mut = van2015.mut %>%
filter(Variant_Type == "SNP") %>%
select(patient, Hugo_Symbol, Chromosome,
Start_position, End_position,
Reference_Allele, Tumor_Seq_Allele2) %>%
filter(!is.na(Hugo_Symbol))
snyder2017 = read_csv("data/Snyder2017_clinical.csv")
snyder2017 = snyder2017 %>%
select(patient_id, hla_allele_list) %>%
rename(patient = patient_id,
HLA = hla_allele_list) %>%
mutate(
HLA = HLA %>%
str_remove_all("\\[") %>%
str_remove_all("\\]") %>%
str_remove_all("\\*") %>%
str_remove_all(" ") %>%
str_replace_all(",", ";") %>%
str_replace_all("([A-Z])", "HLA-\\1")
)
snyder2017.mut = read_csv("data/Snyder2017_variants.csv")
View(snyder2017.mut)
snyder2017.mut = snyder2017.mut %>%
mutate(
patient = patient_id,
Hugo_Symbol = gene_name,
Chromosome = chr,
Start_position = start,
End_position = start,
Reference_Allele = ref,
Tumor_Seq_Allele2 = alt
) %>%
select(patient, Hugo_Symbol, Chromosome,
Start_position, End_position,
Reference_Allele, Tumor_Seq_Allele2) %>%
filter(!is.na(Hugo_Symbol))
ph = bind_rows(van2015, snyder2017)
mut = bind_rows(van2015.mut, snyder2017.mut %>%
mutate(patient = as.character(patient),
Chromosome = as.character(Chromosome)))
ph = bind_rows(van2015 %>%
mutate(study="Van2015"),
snyder2017 %>%
mutate(study="snyder2017"))
write_csv(ph, path = "phenotype.csv")
mut = bind_rows(van2015.mut, snyder2017.mut %>%
mutate(patient = as.character(patient),
Chromosome = as.character(Chromosome)))
mut
all(mut$Start_position == mut$End_position)
vep_mut = mut %>%
mutate_if(is.numeric, as.integer)
test = head(vep_mut)
test
?getSequence
library(biomaRt)
ensembl = useMart('http://grch37.ensembl.org',
biomart = "ENSEMBL_MART_ENSEMBL",
dataset = "hsapiens_gene_ensembl")
getSequence(chromosome = test$Chromosome,
start = test$Start_position,
end = test$End_position,
seqType = "cdna", mart = ensembl)
getSequence(chromosome = test$Chromosome,
start = test$Start_position,
end = test$End_position,
type = "hgnc_symbol",
seqType = "cdna", mart = ensembl)
library(BSgenome.Hsapiens.UCSC.hg19)
Hsapiens
rm(ensembl)
library(BSgenome.Hsapiens.UCSC.hg19)
Hsapiens
getSeq(Hsapiens, "4", start = 47000 - 3000, end = 47000 - 1)
?getSeq
BSgenome::getSeq(Hsapiens, "4", start = 47000 - 3000, end = 47000 - 1)
class(Hsapiens)
BSgenome::getSeq(Hsapiens, "chr4", start = 47000 - 3000, end = 47000 - 1)
BSgenome::getSeq(Hsapiens, "chr4", start = 47000, end = 47000)
mut
BSgenome::getSeq(Hsapiens, "chr4", start = 47000, end = 47000) -> tt
tt
as.character(tt)
?Hsapiens
vep_mut = mut %>%
mutate_if(is.numeric, as.integer) %>%
mutate_if(ref =
BSgenome::getSeq(Hsapiens,
paste0("chr", Chromosome),
start = Start_position,
end = End_position) %>% as.character())
library(tidyverse)
vep_mut = mut %>%
mutate_if(is.numeric, as.integer) %>%
mutate_if(ref =
BSgenome::getSeq(Hsapiens,
paste0("chr", Chromosome),
start = Start_position,
end = End_position) %>% as.character())
mut %>%
mutate_if(is.numeric, as.integer)
vep_mut = mut %>%
mutate_if(is.numeric, as.integer)
ref = vep_mut %>%
BSgenome::getSeq(Hsapiens,
paste0("chr", Chromosome),
start = Start_position,
end = End_position)
ref = getSeq(Hsapiens,
paste0("chr", vep_mut$Chromosome),
start = vep_mut$Start_position,
end = vep_mut$End_position)
table(vep_mut$Chromosome)
mut = bind_rows(van2015.mut, snyder2017.mut %>%
mutate(patient = as.character(patient),
Chromosome = as.character(Chromosome))) %>%
filter(Chromosome %in% c(1:22, "X", "Y"))
vep_mut = mut %>%
mutate_if(is.numeric, as.integer)
table(vep_mut$Chromosome)
ref = getSeq(Hsapiens,
paste0("chr", vep_mut$Chromosome),
start = vep_mut$Start_position,
end = vep_mut$End_position)
ref
ref %>% as.character()
class(ref)
?Biostrings
??Biostrings
ref %>% as.character() %>% head()
ref
ref_seq = as.character(ref)
vep_mut %>%
mutate(ref = ref_seq)
vep_mut = vep_mut %>%
mutate(ref = ref_seq)
all(vep_mut$Reference_Allele == vep_mut$ref)
BSgenome::getSeq(Hsapiens, "chr4", start = 47000, end = 47000)
BSgenome::getSeq(Hsapiens, "chr4", start = 47000, end = 47000, strand = "-")
all(vep_mut$Reference_Allele == vep_mut$ref)
vep_mut
vep_mut = vep_mut %>%
mutate(
chromosome = Chromosome,
start = Start_position,
end = End_position,
allele = paste(Reference_Allele, Tumor_Seq_Allele2, "/"),
strand = "+",
identifier = paste(patient, Chromosome, Start_position, End_position, sep = "-")
) %>%
select(chromosome, start, end, allele, strand, identifier)
vep_mut
vep_mut = mut %>%
mutate_if(is.numeric, as.integer)
vep_mut = vep_mut %>%
mutate(ref = ref_seq)
all(vep_mut$Reference_Allele == vep_mut$ref)
vep_mut = vep_mut %>%
mutate(
chromosome = Chromosome,
start = Start_position,
end = End_position,
allele = paste(Reference_Allele, Tumor_Seq_Allele2, "/"),
strand = "+",
identifier = paste(patient, Chromosome, Start_position, sep = "-")
) %>%
select(chromosome, start, end, allele, strand, identifier)
vep_mut
table(ph$patient)
write_tsv(vep_mut, path = "vep_input.tsv")
vep_mut
write_tsv(vep_mut, path = "vep_input.tsv", col_names = FALSE)
vep_mut = mut %>%
mutate_if(is.numeric, as.integer)
vep_mut = vep_mut %>%
mutate(ref = ref_seq)
vep_mut
all(vep_mut$Reference_Allele == vep_mut$ref)
vep_mut = vep_mut %>%
mutate(
chromosome = Chromosome,
start = Start_position,
end = End_position,
allele = paste(Reference_Allele, Tumor_Seq_Allele2, collapse = "/"),
strand = "+",
identifier = paste(patient, Chromosome, Start_position, sep = "-")
) %>%
select(chromosome, start, end, allele, strand, identifier)
vep_mut
vep_mut = mut %>%
mutate_if(is.numeric, as.integer)
vep_mut = vep_mut %>%
mutate(ref = ref_seq)
all(vep_mut$Reference_Allele == vep_mut$ref)
vep_mut
vep_mut %>%
mutate(
chromosome = Chromosome,
start = Start_position,
end = End_position,
allele = paste(Reference_Allele, Tumor_Seq_Allele2, sep = "/"),
strand = "+",
identifier = paste(patient, Chromosome, Start_position, sep = "-")
) %>%
select(chromosome, start, end, allele, strand, identifier)
vep_mut = vep_mut %>%
mutate(
chromosome = Chromosome,
start = Start_position,
end = End_position,
allele = paste(Reference_Allele, Tumor_Seq_Allele2, sep = "/"),
strand = "+",
identifier = paste(patient, Chromosome, Start_position, sep = "-")
) %>%
select(chromosome, start, end, allele, strand, identifier)
vep_mut
write_tsv(vep_mut, path = "vep_input.tsv", col_names = FALSE)
vep_mut
vep_mut %>%
arrange(chromosome, start)
vep_mut = vep_mut %>%
arrange(chromosome, start)
write_tsv(vep_mut, path = "vep_input.tsv", col_names = FALSE)
table(vep_mut$chromosome)
vep_mut$chromosome %>% unique()
# library(biomartr)
# HS.proteome.refseq <- getProteome( db       = "refseq",
#                                    organism = "Homo sapiens",
#                                    path     = "proteomes",
#                                    gunzip = TRUE)
#
#
download.file("ftp://ftp.ensembl.org/pub/release-75/fasta/homo_sapiens/pep/Homo_sapiens.GRCh37.75.pep.all.fa.gz",
destfile = "proteomes/Homo_sapiens.GRCh37.75.pep.all.fa.gz")
system("gunzip proteomes/Homo_sapiens.GRCh37.75.pep.all.fa.gz")
